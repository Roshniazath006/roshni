# -*- coding: utf-8 -*-
"""Copy of Untitled22.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RPMQQsVS--mIx10xia9GxLiFrJo9nQnw
"""

!pip install pandas numpy matplotlib scikit-learn

import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.utils import to_categorical
import matplotlib.pyplot as plt
import numpy as np

(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train=x_train / 255.0
x_test = x_test / 255.0

y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test ,10)

plt.figure(figsize =(10, 5))
for i in range(10):
  plt.subplot(2, 5, i + 1)
  plt.imshow(x_train[i], cmap='gray')
  plt.title(f"label:{np.argmax(y_train[i])}")
  plt.axis("off")
plt.show()

model = Sequential([
  Flatten(input_shape=(28, 28)),
  Dense(128, activation='relu'),
  Dense(64, activation='relu'),
  Dense(10, activation='softmax'),
])

model.compile(optimizer = 'adam', loss= 'categorical_crossentropy', metrics=['accuracy'])

history = model.fit(x_train, y_train, validation_data=(x_test, y_test),epochs=5,batch_size=32)

test_loss, test_acc = model.evaluate(x_test, y_test)
print(f"Test Accuracy:{test_acc:.4f}")

predictions = model.predict(x_test)
for i in range(5):
  plt.imshow(x_test[i], cmap = 'gray')
  plt.title(f"Predicted: {np.argmax(predictions[i])}, Actual: {np.argmax(y_test)}")
  plt.axis('off')
  plt.show()

